package protocol

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

type HandshakeTestProps struct {
	encoded []byte
	decoded *HandshakePacket
}

var table = []*HandshakeTestProps{
	&HandshakeTestProps{
		encoded: []byte{0x4a, 0x0, 0x0, 0x0, 0xa, 0x38, 0x2e, 0x30, 0x2e, 0x33, 0x35, 0x0, 0xf0, 0x79, 0x1, 0x0, 0x37, 0x39, 0xa, 0x45, 0x78, 0x15, 0x5a, 0x6e, 0x0, 0xff, 0xff, 0xff, 0x2, 0x0, 0xff, 0xdf, 0x15, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x6c, 0x6f, 0xd, 0x7c, 0x2e, 0x55, 0x1f, 0x6d, 0x51, 0x52, 0x77, 0x0, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x0},
		decoded: &HandshakePacket{
			Header: &PacketHeader{
				Length:     74,
				SequenceId: 0,
			},
			ProtocolVersion:     10,
			ServerVersion:       "8.0.35",
			ThreadID:            96752, // []byte{0xf0, 0x79, 0x1, 0x0}
			AuthPluginDataPart1: [8]byte{0x37, 0x39, 0xa, 0x45, 0x78, 0x15, 0x5a, 0x6e},
			Filler:              0,
			CapabilityFlags1:    0xffff,
			CharacterSet:        0xff,
			StatusFlags:         0x0002,
			CapabilityFlags2:    0xdfff,
			AuthPluginDataLen:   21,
			Reserved:            [10]byte{},
			AuthPluginDataPart2: []byte{0x10, 0x6c, 0x6f, 0xd, 0x7c, 0x2e, 0x55, 0x1f, 0x6d, 0x51, 0x52, 0x77, 0x0},
			AuthPluginName:      "mysql_native_password",
		},
	},
}

func Test_Handshake_Decode(t *testing.T) {
	for _, entry := range table {
		p, _ := Decode(entry.encoded)
		assert.Equal(
			t,
			entry.decoded,
			p,
		)
	}
}
func Test_Handshake_Encode(t *testing.T) {
	for _, entry := range table {
		b, _ := Encode(entry.decoded)
		assert.Equal(
			t,
			entry.encoded,
			b,
		)
	}
}
